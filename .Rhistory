### Replace this path with the path in your computer where R can find your files:
setwd("/home/montenegro/MEGA/stanStateDocuments/PSYC3000/assignment4")
### Replace this path with the path in your computer where R can find your files:
setwd("C:/Users/emontenegro1/Documents/MEGA/stanStateDocuments/PSYC3000/assignment4")
### This line of code imports your the data into R.
lifeData <- read.csv("lifeExpect.csv")
library(knitr)
library(kableExtra)
library(dplyr)
rum <- read.csv("ruminationComplete.csv", na.string = "99") ## Imports the data into R
rum_scores <- rum %>% mutate(rumination = rowSums(across(CRQS1:CRSQ13)),
depression =  rowSums(across(CDI1:CDI26))) ### I'm calculating
## total scores
corr <- cor(rum_scores$rumination, rum_scores$depression,
use =  "pairwise.complete.obs") ## Correlation between rumination and depression
### Let's create a distribution of null correlations
nsim <- 100000
cor.c <- vector(mode = "numeric", length = nsim)
for(i in 1:nsim){
depre <- sample(rum_scores$depression,
212,
replace = TRUE)
rumia <- sample(rum_scores$rumination,
212,
replace = TRUE)
cor.c[i] <- cor(depre, rumia, use =  "pairwise.complete.obs")
}
hist(cor.c, breaks = 120,
xlim= c(min(cor.c), 0.70),
main = "Histograma of null correlations")
abline(v = corr, col = "darkblue", lwd = 2, lty = 1)
abline(v = c(quantile(cor.c, .025),quantile(cor.c, .975) ),
col= "red",
lty = 2,
lwd = 2)
library(tidyverse)
rum <- read.csv("ruminationComplete.csv", na.string = "99") ## Imports the data into R
rum_scores <- rum %>% mutate(rumination = rowSums(across(CRQS1:CRSQ13)),
depression =  rowSums(across(CDI1:CDI26))) ### I'm calculating
## total scores
corr <- cor(rum_scores$rumination, rum_scores$depression,
use =  "pairwise.complete.obs") ## Correlation between rumination and depression
### Vamos a crear a una distribution con correlaciones "nulas"
nsim <- 100000
cor.c <- vector(mode = "numeric", length = nsim)
for(i in 1:nsim){
depre <- sample(rum_scores$depression,
212,
replace = TRUE)
rumia <- sample(rum_scores$rumination,
212,
replace = TRUE)
cor.c[i] <- cor(depre, rumia, use =  "pairwise.complete.obs")
}
hist(cor.c, breaks = 120,
xlim= c(min(cor.c), 0.70),
main = "Histograma of null correlations")
abline(v = corr, col = "darkblue", lwd = 2, lty = 1)
abline(v = c(quantile(cor.c, .025),quantile(cor.c, .975) ),
col= "red",
lty = 2,
lwd = 2)
pVal <- 2*mean(cor.c >= corr)
pVal
#| code-fold: true
#| code-summary: "Show the code"
set.seed(1234)
N1 <- 50 ## Sample size group 1
N2 <- 50 ### sample size group 2
Mean1 <- 100 ## Mean group 1
Mean2 <- 20 ### Mean group 2
results <- list()
for(i in 1:10000){
group1 <- rnorm(N1, mean = Mean1, sd = 100) ### variances or standard deviation are not equal
group2 <-  rnorm(N2, mean = Mean2, sd = 200) ### variances or standard deviation are not equal
dataSim <- data.frame(genValues = c(group1,group2),
groupVar = c(rep(1,N1),rep(0,N2)))
results[[i]] <- t.test(genValues ~ groupVar, data = dataSim, var.equal = TRUE)$p.value
}
### Proportion of times we rejected the null hypothesis
cat("Proportion of times we rejected the null hypothesis",sum(unlist(results) <= .05)/length(results)*100)
library(rcompanion)
install.packages("rcompanion")
